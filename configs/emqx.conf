node {
  name: "emqx@127.0.0.1"
  cookie: emqxsecretcookie
  data_dir: "{{ platform_data_dir }}/"
}

cluster {
  name: emqxcl
  autoheal: on
  autoclean: 5m
  discovery_strategy: manual
}

log {
  level: warning
  handlers: [
    {
      type: file
      level: all
      filename: "{{ platform_log_dir }}/emqx.log"
    },
  ]
}

rpc {
  mode: async
  async_batch_size: 256
  tcp_options: ${socket.tcp_options} {
    sndbuf: 1MB
    recbuf: 1MB
    buffer: 1MB
  }
}

broker {
  sys_msg_interval: 1m
  sys_heartbeat_interval: 30s
  session_locking_strategy: quorum
  shared_subscription_strategy: random
  shared_dispatch_ack: off
  route_batch_clean: off
}

listeners: [
  {
    name: mqtt_over_tcp
    type: tcp
    bind: "0.0.0.0:1883"
    max_connections: 1024000
    tcp_options: ${socket.tcp_options}
  },
  {
    name: mqtt_over_ssl
    type: ssl
    bind: "0.0.0.0:8883"
    max_connections: 1024000
    ssl_options: ${socket.ssl_options}
    tcp_options: ${socket.tcp_options}
  },
  {
    name: mqtt_over_ws
    type: ws
    bind: "0.0.0.0:8083"
    mqtt_path: /mqtt
    max_connections: 1024000
    tcp_options: ${socket.tcp_options}
    websocket_options: ${socket.websocket_options}
  },
  {
    name: mqtt_over_wss
    type: wss
    bind: "0.0.0.0:8084"
    mqtt_path: /mqtt
    max_connections: 1024000
    ssl_options: ${socket.ssl_options}
    tcp_options: ${socket.tcp_options}
    websocket_options: ${socket.websocket_options}
  },
  # This is an example listener which has less "strict" MQTT settings.
  # It's useful to clients connecting the broker from trusted networks.
  {
    name: internal_mqtt_over_tcp
    type: tcp
    bind: "127.0.0.1:11883"
    acceptors: 4
    max_connections: 1024000
    max_conn_rate: 1000
    active_n: 1000
    backlog: 512
    mqtt: ${mqtt} {
      bypass_auth: on
      max_packet_size: 2MB
      max_inflight: 128
      max_awaiting_rel: 1000
      max_mqueue_len: 10000
      enable_acl: off
    }
  }
]

socket {
  tcp_options {
    send_timeout: 15s
    recbuf: 4KB
    sndbuf: 4KB
    buffer: 4KB
  }
  ssl_options {
    reuse_sessions: on
    handshake_timeout: 15s
    keyfile: "{{ platform_etc_dir }}/certs/key.pem"
    certfile: "{{ platform_etc_dir }}/certs/cert.pem"
    cacertfile: "{{ platform_etc_dir }}/certs/cacert.pem"
  }
  websocket_options {
    idle_timeout: infinity
    max_frame_size: no_limit
  }
}

mqtt {
  max_packet_size: 1MB
  idle_timeout: 15s
  enable_acl: on
  enable_acl_cache: on
}
