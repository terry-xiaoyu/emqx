##--------------------------------------------------------------------
## MQTT Protocol
##--------------------------------------------------------------------
mqtt:

  ## A zone is a set of configs for MQTT connections.
  ## A Listener that uses a zone uses all configs in that zone.

  ## The default zone
  - zone: default
    ## Maximum MQTT packet size allowed.
    ##
    ## Value: Bytes
    ## Default: 1MB
    max_packet_size: 1MB

    ## Maximum length of MQTT clientId allowed.
    ##
    ## Value: Number [23-65535]
    max_clientid_len: 65535

    ## Maximum topic levels allowed. 0 means no limit.
    ##
    ## Value: Number
    max_topic_levels: 0

    ## Maximum QoS allowed.
    ##
    ## Value: 0 | 1 | 2
    max_qos_allowed: 2

    ## Maximum Topic Alias, 0 means no topic alias supported.
    ##
    ## Value: 0-65535
    max_topic_alias: 65535

    ## Whether the Server supports MQTT retained messages.
    ##
    ## Value: boolean
    retain_available: true

    ## Whether the Server supports MQTT Wildcard Subscriptions
    ##
    ## Value: boolean
    wildcard_subscription: true

    ## Whether the Server supports MQTT Shared Subscriptions.
    ##
    ## Value: boolean
    shared_subscription: true

    ## Whether to ignore loop delivery of messages.(for mqtt v3.1.1)
    ##
    ## Value: true | false
    ignore_loop_deliver: false

    ## Whether to parse the MQTT frame in strict mode
    ##
    ## Value: true | false
    strict_mode: false

    ## Specify the response information returned to the client
    ##
    ## This feature is disabled if not set
    ## Value: String
    response_information:

    ## Specify the global flapping detect policy.
    ## The value is a string composed of flapping threshold, duration and banned interval.
    ## 1. threshold: an integer to specify the disconnected times of a MQTT Client;
    ## 2. duration: the time window for flapping detect;
    ## 3. banned interval: the banned interval if a flapping is detected.
    ##
    ## This feature is disabled if not set
    ##
    ## Value: Integer,Duration,Duration
    ## Example:
    ##
    ## flapping_detect_policy: 30, 1m, 5m
    flapping_detect_policy:

    ## Idle timeout of the external MQTT connections.
    ##
    ## Value: duration
    idle_timeout: 15s

    ## Enable ACL check.
    ##
    ## Value: Flag
    enable_acl: on

    ## Allow or deny if no ACL rules matched.
    ##
    ## Value: allow | deny
    acl_nomatch: allow

    ## Default ACL File.
    ##
    ## Value: File Name
    internal_acl_file: {{ platform_etc_dir }}/acl.conf

    ## Whether to enable ACL cache.
    ##
    ## If enabled, ACLs roles for each client will be cached in the memory
    ##
    ## Value: on | off
    enable_acl_cache: on

    ## The maximum count of ACL entries can be cached for a client.
    ##
    ## Value: Integer greater than 0
    ## Default: 32
    acl_cache_max_size: 32

    ## The time after which an ACL cache entry will be deleted
    ##
    ## Value: Duration
    ## Default: 1 minute
    acl_cache_ttl: 1m

    ## The action when acl check reject current operation
    ##
    ## Value: ignore | disconnect
    ## Default: ignore
    acl_deny_action: ignore

    ## Enable ban check.
    ##
    ## Value: Flag
    enable_ban: on

    ## Enable per connection statistics.
    ##
    ## Value: on | off
    enable_stats: on

    ## Force the MQTT connection process GC after this number of
    ## messages | bytes passed through.
    ##
    ## Numbers delimited by `|'. Zero or negative is to disable.
    force_gc_policy: 16000|16MB

    ## Max message queue length and total heap size to force shutdown
    ## connection/session process.
    ## Message queue here is the Erlang process mailbox, but not the number
    ## of queued MQTT messages of QoS 1 and 2.
    ##
    ## Numbers delimited by `|'. Zero or negative is to disable.
    ##
    ## Default:
    ##   - 10000|64MB on ARCH_64 system
    ##   - 1000|32MB  on ARCH_32 sytem
    force_shutdown_policy: default

    ## Server Keep Alive
    ##
    ## Value: Number
    server_keepalive: 0

    ## The backoff for MQTT keepalive timeout. The broker will kick a connection out
    ## until 'Keepalive * backoff * 2' timeout.
    ##
    ## Value: Float > 0.5
    keepalive_backoff: 0.75

    ## Maximum number of subscriptions allowed, 0 means no limit.
    ##
    ## Value: Number
    max_subscriptions: 0

    ## Force to upgrade QoS according to subscription.
    ##
    ## Value: on | off
    upgrade_qos: off

    ## Maximum size of the Inflight Window storing QoS1/2 messages delivered but unacked.
    ##
    ## Value: Number
    max_inflight: 32

    ## Retry interval for QoS1/2 message delivering.
    ##
    ## Value: Duration
    retry_interval: 30s

    ## Maximum QoS2 packets (Client -> Broker) awaiting PUBREL, 0 means no limit.
    ##
    ## Value: Number
    max_awaiting_rel: 100

    ## The QoS2 messages (Client -> Broker) will be dropped if awaiting PUBREL timeout.
    ##
    ## Value: Duration
    await_rel_timeout: 300s

    ## Default session expiry interval for MQTT V3.1.1 connections.
    ##
    ## Value: Duration
    ## -d: day
    ## -h: hour
    ## -m: minute
    ## -s: second
    ##
    ## Default: 2h, 2 hours
    session_expiry_interval: 2h

    ## Maximum queue length. Enqueued messages when persistent client disconnected,
    ## or inflight window is full. 0 means no limit.
    ##
    ## Value: Number >= 0
    max_mqueue_len: 1000

    ## Topic priorities.
    ## 'none' to indicate no priority table (by default), hence all messages
    ## are treated equal
    ##
    ## Priority number [1-255]
    ## Example: topic/1=10,topic/2=8
    ## NOTE: comma and equal signs are not allowed for priority topic names
    ## NOTE: messages for topics not in the priority table are treated as
    ##       either highest or lowest priority depending on the configured
    ##       value for mqueue_default_priority
    ##
    mqueue_priorities: none

    ## Default to highest priority for topics not matching priority table
    ##
    ## Value: highest | lowest
    mqueue_default_priority: highest

    ## Whether to enqueue QoS0 messages.
    ##
    ## Value: false | true
    mqueue_store_qos0: true

    ## Whether to turn on flapping detect
    ##
    ## Value: on | off
    enable_flapping_detect: off

    ## Prefix all topics with the mountpoint string.
    ##
    ## Variables in mountpoint path:
    ##  - %c: clientid
    ##  - %u: username
    ##
    ## Value: String
    mountpoint:

    ## Allow the zone's clients to bypass authentication step
    ##
    ## Value: true | false
    bypass_auth_plugins: false

    ## Whether use username replace client id
    ##
    ## Value: boolean
    ## Default: false
    use_username_as_clientid: false

    ## Use the CN, DN or CRT field from the client certificate as a username.
    ## Only works for SSL connection.
    ##
    ## Value: cn | dn | crt
    peer_cert_as_username: cn

    rate_limit:
      ## Limit the rate of receiving messages for a MQTT connection.
      ## The rate is counted by the number of messages in an unit time.
      ##
      ## The connection won't accept more messages if the messages come
      ## faster than the limit.
      ##
      ## Value: Number,Duration
      ## Example: 100 messages per 10 seconds:
      ##
      ## messages_in: 100,10s
      ##
      messages_in:

      ## Limit the rate of receiving packets for a MQTT connection.
      ## The rate is counted by bytes of packets in an unit time.
      ##
      ## The connection won't accept more messages if the messages come
      ## faster than the limit.
      ##
      ## Value: Number,Duration
      ## Example: 100KB incoming per 10 seconds:
      ##
      ## bytes_in: 100KB,10s
      ##
      bytes_in:

      ## ?????????
      ## Limit the rate of forwarding MQTT messages to the subscribers
      ## for a MQTT client.
      ## The rate is counted by the number of messages in an unit time.
      ##
      ## The broker won't forward more messages for that client if the
      ## messages come faster than the limit.
      ##
      ## Value: Number, Duration
      ##
      ## Example: 100 messages per 1s:
      ##
      ## messages_forwarding: 100,1s
      messages_forwarding:

      ## ????
      ## Messages quota for the all of external MQTT connections.
      ## This value consumed by the number of recipient on a message.
      ##
      ## Value: Number, Duration
      ##
      ## Example: 200000 messages per 1s:
      ##
      ## messages_forwarding_overall: 200000,1s
      ##
      messages_forwarding_overall:

  ## The internal zone have less "strict" settings
  ## It's useful to clients connecting to the broker from a trusted network.
  - zone: internal
    enable_acl: off
    force_gc_policy: 128000|128MB
    force_shutdown_policy: 128000|128MB
    max_inflight: 128
    max_awaiting_rel: 1000
    max_mqueue_len: 10000
    bypass_auth_plugins: true
